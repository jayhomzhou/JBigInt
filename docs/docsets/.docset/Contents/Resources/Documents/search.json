{"Typealiases.html#/s:6BigInt4Bytea":{"name":"Byte","abstract":"<p>Unsigned 8 bit value</p>"},"Typealiases.html#/s:6BigInt5Bytesa":{"name":"Bytes","abstract":"<p>Array of unsigned 8 bit values</p>"},"Typealiases.html#/s:6BigInt4Limba":{"name":"Limb","abstract":"<p>Unsigned 64 bit value</p>"},"Typealiases.html#/s:6BigInt5Limbsa":{"name":"Limbs","abstract":"<p>Array of unsigned 64 bit values</p>"},"Structs/BInt.html#/s:6BigInt4BIntV4ZEROACvpZ":{"name":"ZERO","abstract":"<p>BInt(0)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3ONEACvpZ":{"name":"ONE","abstract":"<p>BInt(1)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3TWOACvpZ":{"name":"TWO","abstract":"<p>BInt(2)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV5THREEACvpZ":{"name":"THREE","abstract":"<p>BInt(3)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV4FOURACvpZ":{"name":"FOUR","abstract":"<p>BInt(4)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV4FIVEACvpZ":{"name":"FIVE","abstract":"<p>BInt(5)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3SIXACvpZ":{"name":"SIX","abstract":"<p>BInt(6)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV5SEVENACvpZ":{"name":"SEVEN","abstract":"<p>BInt(7)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV5EIGHTACvpZ":{"name":"EIGHT","abstract":"<p>BInt(8)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV4NINEACvpZ":{"name":"NINE","abstract":"<p>BInt(9)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3TENACvpZ":{"name":"TEN","abstract":"<p>BInt(10)</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntVyACSays6UInt64VG_Sbtcfc":{"name":"init(_:_:)","abstract":"<p>Constructs a BInt from magnitude and sign</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntVyACSicfc":{"name":"init(_:)","abstract":"<p>Constructs a BInt from an Int value</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Constructs a BInt from a String value and radix</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV8bitWidthACSi_tcfc":{"name":"init(bitWidth:)","abstract":"<p>Constructs a random BInt with a specified number of bits</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV9magnitudeACSays5UInt8VG_tcfc":{"name":"init(magnitude:)","abstract":"<p>Constructs a BInt from a big-endian magnitude byte array representation</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6signedACSays5UInt8VG_tcfc":{"name":"init(signed:)","abstract":"<p>Constructs a BInt from a big-endian 2&rsquo;s complement byte array representation</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV10isNegativeSbvp":{"name":"isNegative","abstract":"<p>The sign, <em>true</em> if <em>self</em> &lt; 0, <em>false</em> otherwise</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV9magnitudeSays6UInt64VGvp":{"name":"magnitude","abstract":"<p>The magnitude limb array</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV8bitWidthSivp":{"name":"bitWidth","abstract":"<p>The number of bits in the magnitude of <em>self</em>. 0 if <em>self</em> = 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV11descriptionSSvp":{"name":"description","abstract":"<p>Base 10 string value of <em>self</em></p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6isEvenSbvp":{"name":"isEven","abstract":"<p>Is <em>true</em> if <em>self</em> is even, <em>false</em> if <em>self</em> is odd</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV9isNotZeroSbvp":{"name":"isNotZero","abstract":"<p>Is <em>false</em> if <em>self</em> = 0, <em>true</em> otherwise</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV5isOddSbvp":{"name":"isOdd","abstract":"<p>Is <em>true</em> if <em>self</em> is odd, <em>false</em> if <em>self</em> is even</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV5isOneSbvp":{"name":"isOne","abstract":"<p>Is <em>true</em> if <em>self</em> = 1, <em>false</em> otherwise</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV10isPositiveSbvp":{"name":"isPositive","abstract":"<p>Is <em>true</em> if <em>self</em> &gt; 0, <em>false</em> otherwise</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6isZeroSbvp":{"name":"isZero","abstract":"<p>Is <em>true</em> if <em>self</em> = 0, <em>false</em> otherwise</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3absACvp":{"name":"abs","abstract":"<p>The absolute value of <em>self</em></p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV19leadingZeroBitCountSivp":{"name":"leadingZeroBitCount","abstract":"<p>The number of leading zero bits in the magnitude of <em>self</em>. 0 if <em>self</em> = 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6signumSivp":{"name":"signum","abstract":"<p>Is 0 if <em>self</em> = 0, 1 if <em>self</em> &gt; 0, and -1 if <em>self</em> &lt; 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","abstract":"<p>The number of trailing zero bits in the magnitude of <em>self</em>. 0 if <em>self</em> = 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV8asDoubleSdyF":{"name":"asDouble()","abstract":"<p><em>self</em> as a Double</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV02asB0SiSgyF":{"name":"asInt()","abstract":"<p><em>self</em> as an Int</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV16asMagnitudeBytesSays5UInt8VGyF":{"name":"asMagnitudeBytes()","abstract":"<p>Byte array representation of magnitude value</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV13asSignedBytesSays5UInt8VGyF":{"name":"asSignedBytes()","abstract":"<p>Byte array representation of 2&rsquo;s complement value</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV8asString5radix9uppercaseSSSi_SbtF":{"name":"asString(radix:uppercase:)","abstract":"<p><em>self</em> as a String with a given radix</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1aoiyA2C_ACtFZ":{"name":"&(_:_:)","abstract":"<p>Bitwise <strong>and</strong> operator - behaves as if two&rsquo;s complement representation were used,</br>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2aeoiyyACz_ACtFZ":{"name":"&=(_:_:)","abstract":"<p>x = x &amp; y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1ooiyA2C_ACtFZ":{"name":"|(_:_:)","abstract":"<p>Bitwise <strong>or</strong> operator - behaves as if two&rsquo;s complement representation were used,</br>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2oeoiyyACz_ACtFZ":{"name":"|=(_:_:)","abstract":"<p>x = x | y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1xoiyA2C_ACtFZ":{"name":"^(_:_:)","abstract":"<p>Bitwise <strong>xor</strong> operator - behaves as if two&rsquo;s complement representation were used,</br>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2xeoiyyACz_ACtFZ":{"name":"^=(_:_:)","abstract":"<p>x = x ^ y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1topyA2CFZ":{"name":"~(_:)","abstract":"<p>Bitwise <strong>not</strong> operator - behaves as if two&rsquo;s complement arithmetic were used,</br>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV8clearBityySiF":{"name":"clearBit(_:)","abstract":"<p>Clear a specified bit - a no-op if bit number &lt; 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV7flipBityySiF":{"name":"flipBit(_:)","abstract":"<p>Invert a specified bit - a no-op if bit number &lt; 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6setBityySiF":{"name":"setBit(_:)","abstract":"<p>Set a specified bit - a no-op if bit number &lt; 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV7testBitySbSiF":{"name":"testBit(_:)","abstract":"<p>Test a specified bit - <em>false</em> if bit number &lt; 0</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1popyA2CFZ":{"name":"+(_:)","abstract":"<p>Prefix plus</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Addition</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1poiyACSi_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Addition</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Addition</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2peoiyyACz_ACtFZ":{"name":"+=(_:_:)","abstract":"<p>x = x + y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2peoiyyACz_SitFZ":{"name":"+=(_:_:)","abstract":"<p>x = x + y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6negateyyF":{"name":"negate()","abstract":"<p>Negates <em>self</em></p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1sopyA2CFZ":{"name":"-(_:)","abstract":"<p>Negation</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtraction</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1soiyACSi_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtraction</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1soiyA2C_SitFZ":{"name":"-(_:_:)","abstract":"<p>Subtraction</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2seoiyyACz_ACtFZ":{"name":"-=(_:_:)","abstract":"<p>x = x - y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2seoiyyACz_SitFZ":{"name":"-=(_:_:)","abstract":"<p>x = x - y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1moiyA2C_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplication</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1moiyACSi_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplication</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1moiyA2C_SitFZ":{"name":"*(_:_:)","abstract":"<p>Multiplication</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2meoiyyACz_ACtFZ":{"name":"*=(_:_:)","abstract":"<p>x = x * y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2meoiyyACz_SitFZ":{"name":"*=(_:_:)","abstract":"<p>x = x * y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertAC_tF":{"name":"quotientAndRemainder(dividingBy:)","abstract":"<p>Division</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV20quotientAndRemainder10dividingBy__yAC_ACzACztF":{"name":"quotientAndRemainder(dividingBy:_:_:)","abstract":"<p>Division</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1doiyA2C_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Division</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1doiyACSi_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Division</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1doiyA2C_SitFZ":{"name":"/(_:_:)","abstract":"<p>Division</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2deoiyyACz_ACtFZ":{"name":"/=(_:_:)","abstract":"<p>x = x / y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2deoiyyACz_SitFZ":{"name":"/=(_:_:)","abstract":"<p>x = x / y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1roiyA2C_ACtFZ":{"name":"%(_:_:)","abstract":"<p>Remainder</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1roiyACSi_ACtFZ":{"name":"%(_:_:)","abstract":"<p>Remainder</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1roiyA2C_SitFZ":{"name":"%(_:_:)","abstract":"<p>Remainder</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2reoiyyACz_ACtFZ":{"name":"%=(_:_:)","abstract":"<p>x = x % y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2reoiyyACz_SitFZ":{"name":"%=(_:_:)","abstract":"<p>x = x % y</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3modyA2CF":{"name":"mod(_:)","abstract":"<p>Modulus - BInt parameter</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3modyS2iF":{"name":"mod(_:)","abstract":"<p>Modulus - Int parameter</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV10modInverseyA2CF":{"name":"modInverse(_:)","abstract":"<p>Inverse modulus - BInt parameter</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV10modInverseyS2iF":{"name":"modInverse(_:)","abstract":"<p>Inverse modulus - Int parameter</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2mmoiyA2C_SitFZ":{"name":"**(_:_:)","abstract":"<p>Exponentiation</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV6expModyA2C_ACtF":{"name":"expMod(_:_:)","abstract":"<p>Modular exponentiation</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2eeoiySbAC_SitFZ":{"name":"==(_:_:)","abstract":"<p>Equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2eeoiySbSi_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Not equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2neoiySbAC_SitFZ":{"name":"!=(_:_:)","abstract":"<p>Not equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2neoiySbSi_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Not equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Less then</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1loiySbAC_SitFZ":{"name":"<(_:_:)","abstract":"<p>Less than</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1loiySbSi_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Less than</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1goiySbAC_ACtFZ":{"name":">(_:_:)","abstract":"<p>Greater than</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1goiySbSi_ACtFZ":{"name":">(_:_:)","abstract":"<p>Greater than</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV1goiySbAC_SitFZ":{"name":">(_:_:)","abstract":"<p>Greater than</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2leoiySbAC_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Less than or equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2leoiySbSi_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Less than or equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2leoiySbAC_SitFZ":{"name":"<=(_:_:)","abstract":"<p>Less than or equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2geoiySbAC_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Greater than or equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2geoiySbSi_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Greater than or equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2geoiySbAC_SitFZ":{"name":">=(_:_:)","abstract":"<p>Greater than or equal</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2lloiyA2C_SitFZ":{"name":"<<(_:_:)","abstract":"<p>Logical left shift</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3lleoiyyACz_SitFZ":{"name":"<<=(_:_:)","abstract":"<p>x = x &lt;&lt; n</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV2ggoiyA2C_SitFZ":{"name":">>(_:_:)","abstract":"<p>Logical right shift</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3ggeoiyyACz_SitFZ":{"name":">>=(_:_:)","abstract":"<p>x = x &gt;&gt; n</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV9nextPrimeyACSiF":{"name":"nextPrime(_:)","abstract":"<p>The next probable prime greater than <em>self</em></p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV15isProbablyPrimeySbSiF":{"name":"isProbablyPrime(_:)","abstract":"<p>Checks whether <em>self</em> is prime using the Miller-Rabin algorithm</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV13probablePrimeyACSi_SitFZ":{"name":"probablePrime(_:_:)","abstract":"<p>A probable prime number with a given bitwidth</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3gcdyA2CF":{"name":"gcd(_:)","abstract":"<p>Greatest common divisor</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV3lcmyA2CF":{"name":"lcm(_:)","abstract":"<p>Least common multiple</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV12jacobiSymbolySiACF":{"name":"jacobiSymbol(_:)","abstract":"<p>Jacobi symbol - BInt parameter</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV12jacobiSymbolyS2iF":{"name":"jacobiSymbol(_:)","abstract":"<p>Jacobi symbol - Int parameter</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV14randomLessThanACyF":{"name":"randomLessThan()","abstract":"<p>Random value</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV4rootyACSiF":{"name":"root(_:)","abstract":"<p>n&#39;th root of a non-negative number</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV4sqrtACyF":{"name":"sqrt()","abstract":"<p>Square root of a non-negative number</p>","parent_name":"BInt"},"Structs/BInt.html#/s:6BigInt4BIntV7sqrtModyACSgACF":{"name":"sqrtMod(_:)","abstract":"<p>Square root modulo a prime number</p>","parent_name":"BInt"},"Structs/BInt.html":{"name":"BInt","abstract":"<p>A signed integer of unbounded size."},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}